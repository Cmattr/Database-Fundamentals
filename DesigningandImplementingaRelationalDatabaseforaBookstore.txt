1NF (First Normal Form): Each table in the schema has a primary key that uniquely identifies each row, ensuring that all entries in a column are atomic. For example, in the “Author” table, “PK id INT NOT NULL” serves as the primary key. This means that each author has a unique ID, and there are no repeating groups or arrays, which satisfies the condition of 1NF.
2NF (Second Normal Form): The schema is in 2NF because it meets all requirements of 1NF and every non-key attribute is fully functionally dependent on the primary key. For instance, in the “Book” table, both “name” and “price” attributes are dependent on the primary key “id”. This means that the value of “name” and “price” can be determined by the value of “id”, which satisfies the condition of 2NF.
3NF (Third Normal Form): The design achieves 3NF as it satisfies both 1NF and 2NF conditions and ensures that every non-key attribute is non-transitively dependent on the primary key. In other words, there are no transitive dependencies. For example, in the “Transaction” table “total_cost” is directly related to its primary key without any transitive dependency. This means that “total_cost” is not dependent on any other non-key attribute, which satisfies the condition of 3NF.
These normalization forms help to ensure data integrity, reduce data redundancy, and simplify data management.